name: Build & Test

on:
  workflow_call:

jobs:
  build:
    name: Build & Test
    runs-on: windows-latest # Run on Windows for now to use the pre-installed Cosmos Emulator
    permissions:
      id-token: write
      contents: read
      checks: write
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Check formatting
        run: |
          dotnet tool restore
          dotnet csharpier --check .

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Start CosmosDb Emulator
        shell: pwsh
        run: |
          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
          Start-CosmosDbEmulator -PartitionCount 10 -NoUI -Timeout 600

      - name: Test
        run: dotnet test --no-build
        env:
          TEST_COSMOS_CONNECTION_STRING: "AccountEndpoint=https://127.0.0.1:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="

      - name: Test Report
        uses: dorny/test-reporter@v2
        if: success() || failure()
        with:
          name: .NET Tests
          path: .test-results/*.trx
          reporter: dotnet-trx
